// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.2
// source: resource_manager.proto

package resmngr

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusUpdateRequest_Status int32

const (
	StatusUpdateRequest_READY    StatusUpdateRequest_Status = 0
	StatusUpdateRequest_FINISHED StatusUpdateRequest_Status = 1
)

// Enum value maps for StatusUpdateRequest_Status.
var (
	StatusUpdateRequest_Status_name = map[int32]string{
		0: "READY",
		1: "FINISHED",
	}
	StatusUpdateRequest_Status_value = map[string]int32{
		"READY":    0,
		"FINISHED": 1,
	}
)

func (x StatusUpdateRequest_Status) Enum() *StatusUpdateRequest_Status {
	p := new(StatusUpdateRequest_Status)
	*p = x
	return p
}

func (x StatusUpdateRequest_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusUpdateRequest_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_manager_proto_enumTypes[0].Descriptor()
}

func (StatusUpdateRequest_Status) Type() protoreflect.EnumType {
	return &file_resource_manager_proto_enumTypes[0]
}

func (x StatusUpdateRequest_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusUpdateRequest_Status.Descriptor instead.
func (StatusUpdateRequest_Status) EnumDescriptor() ([]byte, []int) {
	return file_resource_manager_proto_rawDescGZIP(), []int{0, 0}
}

type StatusUpdateReply_Action int32

const (
	StatusUpdateReply_DESTROY    StatusUpdateReply_Action = 0
	StatusUpdateReply_KEEP_ALIVE StatusUpdateReply_Action = 1
	StatusUpdateReply_OK         StatusUpdateReply_Action = 2
)

// Enum value maps for StatusUpdateReply_Action.
var (
	StatusUpdateReply_Action_name = map[int32]string{
		0: "DESTROY",
		1: "KEEP_ALIVE",
		2: "OK",
	}
	StatusUpdateReply_Action_value = map[string]int32{
		"DESTROY":    0,
		"KEEP_ALIVE": 1,
		"OK":         2,
	}
)

func (x StatusUpdateReply_Action) Enum() *StatusUpdateReply_Action {
	p := new(StatusUpdateReply_Action)
	*p = x
	return p
}

func (x StatusUpdateReply_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusUpdateReply_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_manager_proto_enumTypes[1].Descriptor()
}

func (StatusUpdateReply_Action) Type() protoreflect.EnumType {
	return &file_resource_manager_proto_enumTypes[1]
}

func (x StatusUpdateReply_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusUpdateReply_Action.Descriptor instead.
func (StatusUpdateReply_Action) EnumDescriptor() ([]byte, []int) {
	return file_resource_manager_proto_rawDescGZIP(), []int{1, 0}
}

//
// Firecracker will update the RM with its status on start/finish
//
type StatusUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vmid   string                     `protobuf:"bytes,1,opt,name=vmid,proto3" json:"vmid,omitempty"`
	Status StatusUpdateRequest_Status `protobuf:"varint,2,opt,name=status,proto3,enum=resmngr.StatusUpdateRequest_Status" json:"status,omitempty"`
}

func (x *StatusUpdateRequest) Reset() {
	*x = StatusUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdateRequest) ProtoMessage() {}

func (x *StatusUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdateRequest.ProtoReflect.Descriptor instead.
func (*StatusUpdateRequest) Descriptor() ([]byte, []int) {
	return file_resource_manager_proto_rawDescGZIP(), []int{0}
}

func (x *StatusUpdateRequest) GetVmid() string {
	if x != nil {
		return x.Vmid
	}
	return ""
}

func (x *StatusUpdateRequest) GetStatus() StatusUpdateRequest_Status {
	if x != nil {
		return x.Status
	}
	return StatusUpdateRequest_READY
}

// Reply has action, such as self-destroy or stay alive
type StatusUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action StatusUpdateReply_Action `protobuf:"varint,1,opt,name=action,proto3,enum=resmngr.StatusUpdateReply_Action" json:"action,omitempty"`
}

func (x *StatusUpdateReply) Reset() {
	*x = StatusUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdateReply) ProtoMessage() {}

func (x *StatusUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_resource_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdateReply.ProtoReflect.Descriptor instead.
func (*StatusUpdateReply) Descriptor() ([]byte, []int) {
	return file_resource_manager_proto_rawDescGZIP(), []int{1}
}

func (x *StatusUpdateReply) GetAction() StatusUpdateReply_Action {
	if x != nil {
		return x.Action
	}
	return StatusUpdateReply_DESTROY
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port   uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	NodeId string `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resource_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_resource_manager_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterNodeRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterNodeRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RegisterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

var File_resource_manager_proto protoreflect.FileDescriptor

var file_resource_manager_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x73, 0x6d, 0x6e, 0x67,
	0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89,
	0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x6d, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x65, 0x73,
	0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x21, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x22, 0x7d, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x39, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x72, 0x65, 0x73, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x45, 0x45, 0x50, 0x5f, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x02, 0x22, 0x52, 0x0a, 0x13, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x32, 0xa4, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x73, 0x4d, 0x6e, 0x67, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x2e, 0x72, 0x65, 0x73, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x72, 0x65, 0x73, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x72,
	0x65, 0x73, 0x6d, 0x6e, 0x67, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x72, 0x65, 0x73, 0x6d, 0x6e,
	0x67, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resource_manager_proto_rawDescOnce sync.Once
	file_resource_manager_proto_rawDescData = file_resource_manager_proto_rawDesc
)

func file_resource_manager_proto_rawDescGZIP() []byte {
	file_resource_manager_proto_rawDescOnce.Do(func() {
		file_resource_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_resource_manager_proto_rawDescData)
	})
	return file_resource_manager_proto_rawDescData
}

var file_resource_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_resource_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_resource_manager_proto_goTypes = []interface{}{
	(StatusUpdateRequest_Status)(0), // 0: resmngr.StatusUpdateRequest.Status
	(StatusUpdateReply_Action)(0),   // 1: resmngr.StatusUpdateReply.Action
	(*StatusUpdateRequest)(nil),     // 2: resmngr.StatusUpdateRequest
	(*StatusUpdateReply)(nil),       // 3: resmngr.StatusUpdateReply
	(*RegisterNodeRequest)(nil),     // 4: resmngr.RegisterNodeRequest
	(*emptypb.Empty)(nil),           // 5: google.protobuf.Empty
}
var file_resource_manager_proto_depIdxs = []int32{
	0, // 0: resmngr.StatusUpdateRequest.status:type_name -> resmngr.StatusUpdateRequest.Status
	1, // 1: resmngr.StatusUpdateReply.action:type_name -> resmngr.StatusUpdateReply.Action
	2, // 2: resmngr.ResMngrService.UpdateStatus:input_type -> resmngr.StatusUpdateRequest
	4, // 3: resmngr.ResMngrService.RegisterNode:input_type -> resmngr.RegisterNodeRequest
	3, // 4: resmngr.ResMngrService.UpdateStatus:output_type -> resmngr.StatusUpdateReply
	5, // 5: resmngr.ResMngrService.RegisterNode:output_type -> google.protobuf.Empty
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_resource_manager_proto_init() }
func file_resource_manager_proto_init() {
	if File_resource_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resource_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resource_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resource_manager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resource_manager_proto_goTypes,
		DependencyIndexes: file_resource_manager_proto_depIdxs,
		EnumInfos:         file_resource_manager_proto_enumTypes,
		MessageInfos:      file_resource_manager_proto_msgTypes,
	}.Build()
	File_resource_manager_proto = out.File
	file_resource_manager_proto_rawDesc = nil
	file_resource_manager_proto_goTypes = nil
	file_resource_manager_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ResMngrServiceClient is the client API for ResMngrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResMngrServiceClient interface {
	// Scheduler asks for a VM from us
	// rpc RequestVM   (ResourceRequest)     returns (google.protobuf.Empty) {}
	// A VM updating its status
	UpdateStatus(ctx context.Context, in *StatusUpdateRequest, opts ...grpc.CallOption) (*StatusUpdateReply, error)
	// FCDaemon register itself to resource manager
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type resMngrServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewResMngrServiceClient(cc grpc.ClientConnInterface) ResMngrServiceClient {
	return &resMngrServiceClient{cc}
}

func (c *resMngrServiceClient) UpdateStatus(ctx context.Context, in *StatusUpdateRequest, opts ...grpc.CallOption) (*StatusUpdateReply, error) {
	out := new(StatusUpdateReply)
	err := c.cc.Invoke(ctx, "/resmngr.ResMngrService/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resMngrServiceClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/resmngr.ResMngrService/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResMngrServiceServer is the server API for ResMngrService service.
type ResMngrServiceServer interface {
	// Scheduler asks for a VM from us
	// rpc RequestVM   (ResourceRequest)     returns (google.protobuf.Empty) {}
	// A VM updating its status
	UpdateStatus(context.Context, *StatusUpdateRequest) (*StatusUpdateReply, error)
	// FCDaemon register itself to resource manager
	RegisterNode(context.Context, *RegisterNodeRequest) (*emptypb.Empty, error)
}

// UnimplementedResMngrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResMngrServiceServer struct {
}

func (*UnimplementedResMngrServiceServer) UpdateStatus(context.Context, *StatusUpdateRequest) (*StatusUpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatus not implemented")
}
func (*UnimplementedResMngrServiceServer) RegisterNode(context.Context, *RegisterNodeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNode not implemented")
}

func RegisterResMngrServiceServer(s *grpc.Server, srv ResMngrServiceServer) {
	s.RegisterService(&_ResMngrService_serviceDesc, srv)
}

func _ResMngrService_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResMngrServiceServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resmngr.ResMngrService/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResMngrServiceServer).UpdateStatus(ctx, req.(*StatusUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResMngrService_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResMngrServiceServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resmngr.ResMngrService/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResMngrServiceServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResMngrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resmngr.ResMngrService",
	HandlerType: (*ResMngrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateStatus",
			Handler:    _ResMngrService_UpdateStatus_Handler,
		},
		{
			MethodName: "RegisterNode",
			Handler:    _ResMngrService_RegisterNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resource_manager.proto",
}
